name: Publish & Release SDK
on:
  workflow_dispatch:
    inputs:
      cab_id:
        description: "CAB id for the change/release"
        required: true
        type: string

jobs:
    publish:
        runs-on: ubuntu-latest
        environment: prod

        outputs:
          release_number: ${{steps.get_latest_release_number.outputs.release_tag}}
        permissions:
          contents: write
          pull-requests: write

        steps:
            - name: Checkout Xero-Java repo
              uses: actions/checkout@v4
              with:
                repository: XeroAPI/Xero-Java
                path: Xero-Java

            - name: Set up JDK environment
              uses: actions/setup-java@v4
              with: 
                distribution: 'temurin'
                java-version: '11'
                cache: maven
                server-id: ossrh
                server-username: MAVEN_USERNAME
                server-password: MAVEN_PASSWORD
                gpg-passphrase: GPG_PASSPHRASE

            - name: Fetch Latest release number
              id: get_latest_release_number
              run: |
                  latest_version=$(gh release view --json tagName --jq '.tagName')
                  echo "Latest release version is - $latest_version"
                  echo "::set-output name=release_tag::$latest_version"
              working-directory: Xero-Java
              env:
                 GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

            - name: Import GPG Key
              run: |
                echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
              env: 
                GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY}}

            - name: Publish to OSSRH Staging API
              run: |
                export GPG_TTY=$(tty)
                mvn clean deploy -DskipTests=true
              env:
                MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
                MAVEN_PASSWORD: ${{ secrets.MAVEN_TOKEN }}
                GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
              working-directory: Xero-Java

            # This needs to run from the same IP address that the mvn deploy ran on.
            # Once this is complete you will need to log in to https://central.sonatype.com/publishing
            # to finish the publish. We can supply publishing_type as 'automatic' instead to skip this step.
            # See docs: https://central.sonatype.org/publish/publish-portal-ossrh-staging-api
            - name: OSSRH Staging API publish
              run: |
                curl -i -X POST -u "$MAVEN_USERNAME:$MAVEN_PASSWORD" https://ossrh-staging-api.central.sonatype.com/manual/upload/defaultRepository/com.github.xeroapi?publishing_type=user_managed
              env:
                MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
                MAVEN_PASSWORD: ${{ secrets.MAVEN_TOKEN }}
              working-directory: Xero-Java

    notify-slack-on-success:
      runs-on: ubuntu-latest
      needs: publish
      if: success()
      permissions:
        contents: read
      steps:
        - name: Checkout Xero-Java repo
          uses: actions/checkout@v4
          with:
            repository: XeroAPI/Xero-Java
            path: Xero-Java
  
        - name: Send slack notification on success
          uses: ./Xero-Java/.github/actions/notify-slack
          with:
            heading_text: "Publish job has succeeded !"
            alert_type: "thumbsup"
            job_status: "Success"
            XERO_SLACK_WEBHOOK_URL: ${{secrets.XERO_SLACK_WEBHOOK_URL}}
            job_url: "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
            button_type: "primary"
            package_version: ${{needs.publish.outputs.release_number}}
            repo_link: ${{github.server_url}}/${{github.repository}}

    notify-slack-on-failure:
      runs-on: ubuntu-latest
      needs: publish
      if: failure()
      permissions:
        contents: read
      steps:
        - name: Checkout Xero-Java repo
          uses: actions/checkout@v4
          with:
            repository: XeroAPI/Xero-Java
            path: Xero-Java
  
        - name: Send slack notification on failure
          uses: ./Xero-Java/.github/actions/notify-slack
          with:
            heading_text: "Publish job has failed !"
            alert_type: "alert"
            job_status: "Failed"
            XERO_SLACK_WEBHOOK_URL: ${{secrets.XERO_SLACK_WEBHOOK_URL}}
            job_url: "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
            button_type: "danger"
            package_version: ${{needs.publish.outputs.release_number}}
            repo_link: ${{github.server_url}}/${{github.repository}}

    notify-codegen-repo:
     needs: publish
     if: always()
     runs-on: ubuntu-latest
     permissions:
      contents: write
      pull-requests: write

     steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: XeroAPI/Xero-Java
          path: Xero-Java

      - name: Install octokit dependencies
        run: npm i
        working-directory: Xero-Java/.github/octokit

      - name: Get github app access token
        id: get_access_token
        env:
          GITHUB_APP_ID: ${{ secrets.XERO_CODEGEN_BOT_APPLICATION_ID }}
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.XERO_CODEGEN_BOT_APPLICATION_KEY }}
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
              const { getAccessToken } = await import('${{ github.workspace }}/Xero-Java/.github/octokit/index.js')
              const token = await getAccessToken()
              return token

      - name: Notify codegen repo
        run: |
            curl -X POST -H "Authorization: token ${{ steps.get_access_token.outputs.result }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Content-Type: application/json" \
              https://api.github.com/repos/xero-internal/xeroapi-sdk-codegen/actions/workflows/notify-sdk-publish.yml/dispatches \
              -d '{
                "ref": "master",
                "inputs": {
                  "commit": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}",
                  "status": "${{needs.publish.result}}",
                  "deployer": "xero-codegen-bot",
                  "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "environment": "prod",
                  "sdk_type": "java",
                  "cab_key": "${{ github.event.inputs.cab_id }}"
                  }
                }'
