/*
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.file;
import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import java.io.IOException;

import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.LocalDateTime;
import org.threeten.bp.ZoneId;
import org.threeten.bp.Instant;
import org.threeten.bp.LocalDate;
import com.xero.api.StringUtil;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The Object Group that the object is in. These roughly correlate to the endpoints that can be used to retrieve the object via the core accounting API.
 */
public enum ObjectGroup {
  
    /**
     * ACCOUNT
     */
  ACCOUNT("Account"),
  
    /**
     * BANKTRANSACTION
     */
  BANKTRANSACTION("BankTransaction"),
  
    /**
     * CONTACT
     */
  CONTACT("Contact"),
  
    /**
     * CREDITNOTE
     */
  CREDITNOTE("CreditNote"),
  
    /**
     * INVOICE
     */
  INVOICE("Invoice"),
  
    /**
     * ITEM
     */
  ITEM("Item"),
  
    /**
     * MANUALJOURNAL
     */
  MANUALJOURNAL("ManualJournal"),
  
    /**
     * OVERPAYMENT
     */
  OVERPAYMENT("Overpayment"),
  
    /**
     * PAYMENT
     */
  PAYMENT("Payment"),
  
    /**
     * PREPAYMENT
     */
  PREPAYMENT("Prepayment"),
  
    /**
     * QUOTE
     */
  QUOTE("Quote"),
  
    /**
     * RECEIPT
     */
  RECEIPT("Receipt");

  private String value;

  ObjectGroup(String value) {
    this.value = value;
  }

  /**
   * @return String value
   */
  @JsonValue
  public String getValue() {
    return value;
  }

  /** toString
  * @return String value
  */
  @Override
  public String toString() {
    return String.valueOf(value);
  }

   /** fromValue
   * @param value String 
   */
  @JsonCreator
  public static ObjectGroup fromValue(String value) {
    for (ObjectGroup b : ObjectGroup.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

