/*
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.payrollau;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Country of residence as a valid ISO 3166-1 alpha-2 country code e.g. \&quot;AU\&quot;,
 * \&quot;NZ\&quot;, \&quot;CA\&quot;. Only applicable, and mandatory if income type is
 * WORKINGHOLIDAYMAKER.
 */
public enum CountryOfResidence {

  /** AF */
  AF("AF"),

  /** AX */
  AX("AX"),

  /** AL */
  AL("AL"),

  /** DZ */
  DZ("DZ"),

  /** AS */
  AS("AS"),

  /** AD */
  AD("AD"),

  /** AO */
  AO("AO"),

  /** AI */
  AI("AI"),

  /** AQ */
  AQ("AQ"),

  /** AG */
  AG("AG"),

  /** AR */
  AR("AR"),

  /** AM */
  AM("AM"),

  /** AW */
  AW("AW"),

  /** AU */
  AU("AU"),

  /** AT */
  AT("AT"),

  /** AZ */
  AZ("AZ"),

  /** BS */
  BS("BS"),

  /** BH */
  BH("BH"),

  /** BD */
  BD("BD"),

  /** BB */
  BB("BB"),

  /** BY */
  BY("BY"),

  /** BE */
  BE("BE"),

  /** BZ */
  BZ("BZ"),

  /** BJ */
  BJ("BJ"),

  /** BM */
  BM("BM"),

  /** BT */
  BT("BT"),

  /** BO */
  BO("BO"),

  /** BA */
  BA("BA"),

  /** BW */
  BW("BW"),

  /** BV */
  BV("BV"),

  /** BR */
  BR("BR"),

  /** IO */
  IO("IO"),

  /** BN */
  BN("BN"),

  /** BG */
  BG("BG"),

  /** BF */
  BF("BF"),

  /** BI */
  BI("BI"),

  /** KH */
  KH("KH"),

  /** CM */
  CM("CM"),

  /** CA */
  CA("CA"),

  /** CV */
  CV("CV"),

  /** KY */
  KY("KY"),

  /** CF */
  CF("CF"),

  /** TD */
  TD("TD"),

  /** CL */
  CL("CL"),

  /** CN */
  CN("CN"),

  /** CX */
  CX("CX"),

  /** CC */
  CC("CC"),

  /** CO */
  CO("CO"),

  /** KM */
  KM("KM"),

  /** CG */
  CG("CG"),

  /** CD */
  CD("CD"),

  /** CK */
  CK("CK"),

  /** CR */
  CR("CR"),

  /** CI */
  CI("CI"),

  /** HR */
  HR("HR"),

  /** CU */
  CU("CU"),

  /** CY */
  CY("CY"),

  /** CZ */
  CZ("CZ"),

  /** DK */
  DK("DK"),

  /** DJ */
  DJ("DJ"),

  /** DM */
  DM("DM"),

  /** DO */
  DO("DO"),

  /** EC */
  EC("EC"),

  /** EG */
  EG("EG"),

  /** SV */
  SV("SV"),

  /** GQ */
  GQ("GQ"),

  /** ER */
  ER("ER"),

  /** EE */
  EE("EE"),

  /** ET */
  ET("ET"),

  /** FK */
  FK("FK"),

  /** FO */
  FO("FO"),

  /** FJ */
  FJ("FJ"),

  /** FI */
  FI("FI"),

  /** FR */
  FR("FR"),

  /** GF */
  GF("GF"),

  /** PF */
  PF("PF"),

  /** TF */
  TF("TF"),

  /** GA */
  GA("GA"),

  /** GM */
  GM("GM"),

  /** GE */
  GE("GE"),

  /** DE */
  DE("DE"),

  /** GH */
  GH("GH"),

  /** GI */
  GI("GI"),

  /** GR */
  GR("GR"),

  /** GL */
  GL("GL"),

  /** GD */
  GD("GD"),

  /** GP */
  GP("GP"),

  /** GU */
  GU("GU"),

  /** GT */
  GT("GT"),

  /** GG */
  GG("GG"),

  /** GN */
  GN("GN"),

  /** GW */
  GW("GW"),

  /** GY */
  GY("GY"),

  /** HT */
  HT("HT"),

  /** HM */
  HM("HM"),

  /** VA */
  VA("VA"),

  /** HN */
  HN("HN"),

  /** HK */
  HK("HK"),

  /** HU */
  HU("HU"),

  /** IS */
  IS("IS"),

  /** IN */
  IN("IN"),

  /** ID */
  ID("ID"),

  /** IR */
  IR("IR"),

  /** IQ */
  IQ("IQ"),

  /** IE */
  IE("IE"),

  /** IM */
  IM("IM"),

  /** IL */
  IL("IL"),

  /** IT */
  IT("IT"),

  /** JM */
  JM("JM"),

  /** JP */
  JP("JP"),

  /** JE */
  JE("JE"),

  /** JO */
  JO("JO"),

  /** KZ */
  KZ("KZ"),

  /** KE */
  KE("KE"),

  /** KI */
  KI("KI"),

  /** KP */
  KP("KP"),

  /** KR */
  KR("KR"),

  /** KW */
  KW("KW"),

  /** KG */
  KG("KG"),

  /** LA */
  LA("LA"),

  /** LV */
  LV("LV"),

  /** LB */
  LB("LB"),

  /** LS */
  LS("LS"),

  /** LR */
  LR("LR"),

  /** LY */
  LY("LY"),

  /** LI */
  LI("LI"),

  /** LT */
  LT("LT"),

  /** LU */
  LU("LU"),

  /** MO */
  MO("MO"),

  /** MK */
  MK("MK"),

  /** MG */
  MG("MG"),

  /** MW */
  MW("MW"),

  /** MY */
  MY("MY"),

  /** MV */
  MV("MV"),

  /** ML */
  ML("ML"),

  /** MT */
  MT("MT"),

  /** MH */
  MH("MH"),

  /** MQ */
  MQ("MQ"),

  /** MR */
  MR("MR"),

  /** MU */
  MU("MU"),

  /** YT */
  YT("YT"),

  /** MX */
  MX("MX"),

  /** FM */
  FM("FM"),

  /** MD */
  MD("MD"),

  /** MC */
  MC("MC"),

  /** MN */
  MN("MN"),

  /** ME */
  ME("ME"),

  /** MS */
  MS("MS"),

  /** MA */
  MA("MA"),

  /** MZ */
  MZ("MZ"),

  /** MM */
  MM("MM"),

  /** NA */
  NA("NA"),

  /** NR */
  NR("NR"),

  /** NP */
  NP("NP"),

  /** NL */
  NL("NL"),

  /** AN */
  AN("AN"),

  /** NC */
  NC("NC"),

  /** NZ */
  NZ("NZ"),

  /** NI */
  NI("NI"),

  /** NE */
  NE("NE"),

  /** NG */
  NG("NG"),

  /** NU */
  NU("NU"),

  /** NF */
  NF("NF"),

  /** MP */
  MP("MP"),

  /** NO */
  NO("NO"),

  /** OM */
  OM("OM"),

  /** PK */
  PK("PK"),

  /** PW */
  PW("PW"),

  /** PS */
  PS("PS"),

  /** PA */
  PA("PA"),

  /** PG */
  PG("PG"),

  /** PY */
  PY("PY"),

  /** PE */
  PE("PE"),

  /** PH */
  PH("PH"),

  /** PN */
  PN("PN"),

  /** PL */
  PL("PL"),

  /** PT */
  PT("PT"),

  /** PR */
  PR("PR"),

  /** QA */
  QA("QA"),

  /** RE */
  RE("RE"),

  /** RO */
  RO("RO"),

  /** RU */
  RU("RU"),

  /** RW */
  RW("RW"),

  /** BL */
  BL("BL"),

  /** SH */
  SH("SH"),

  /** KN */
  KN("KN"),

  /** LC */
  LC("LC"),

  /** MF */
  MF("MF"),

  /** PM */
  PM("PM"),

  /** VC */
  VC("VC"),

  /** WS */
  WS("WS"),

  /** SM */
  SM("SM"),

  /** ST */
  ST("ST"),

  /** SA */
  SA("SA"),

  /** SN */
  SN("SN"),

  /** RS */
  RS("RS"),

  /** SC */
  SC("SC"),

  /** SL */
  SL("SL"),

  /** SG */
  SG("SG"),

  /** SK */
  SK("SK"),

  /** SI */
  SI("SI"),

  /** SB */
  SB("SB"),

  /** SO */
  SO("SO"),

  /** ZA */
  ZA("ZA"),

  /** GS */
  GS("GS"),

  /** ES */
  ES("ES"),

  /** LK */
  LK("LK"),

  /** SD */
  SD("SD"),

  /** SR */
  SR("SR"),

  /** SJ */
  SJ("SJ"),

  /** SZ */
  SZ("SZ"),

  /** SE */
  SE("SE"),

  /** CH */
  CH("CH"),

  /** SY */
  SY("SY"),

  /** TW */
  TW("TW"),

  /** TJ */
  TJ("TJ"),

  /** TZ */
  TZ("TZ"),

  /** TH */
  TH("TH"),

  /** TL */
  TL("TL"),

  /** TG */
  TG("TG"),

  /** TK */
  TK("TK"),

  /** TO */
  TO("TO"),

  /** TT */
  TT("TT"),

  /** TN */
  TN("TN"),

  /** TR */
  TR("TR"),

  /** TM */
  TM("TM"),

  /** TC */
  TC("TC"),

  /** TV */
  TV("TV"),

  /** UG */
  UG("UG"),

  /** UA */
  UA("UA"),

  /** AE */
  AE("AE"),

  /** GB */
  GB("GB"),

  /** US */
  US("US"),

  /** UM */
  UM("UM"),

  /** UY */
  UY("UY"),

  /** UZ */
  UZ("UZ"),

  /** VU */
  VU("VU"),

  /** VE */
  VE("VE"),

  /** VN */
  VN("VN"),

  /** VG */
  VG("VG"),

  /** VI */
  VI("VI"),

  /** WF */
  WF("WF"),

  /** EH */
  EH("EH"),

  /** YE */
  YE("YE"),

  /** ZM */
  ZM("ZM"),

  /** ZW */
  ZW("ZW"),

  /** BQ */
  BQ("BQ"),

  /** CW */
  CW("CW"),

  /** SX */
  SX("SX"),

  /** SS */
  SS("SS");

  private String value;

  CountryOfResidence(String value) {
    this.value = value;
  }

  /** @return String value */
  @JsonValue
  public String getValue() {
    return value;
  }

  /**
   * toString
   *
   * @return String value
   */
  @Override
  public String toString() {
    return String.valueOf(value);
  }

  /**
   * fromValue
   *
   * @param value String
   */
  @JsonCreator
  public static CountryOfResidence fromValue(String value) {
    for (CountryOfResidence b : CountryOfResidence.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}
