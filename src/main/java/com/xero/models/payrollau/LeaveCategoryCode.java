/*
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.payrollau;
import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import java.io.IOException;

import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.LocalDateTime;
import org.threeten.bp.ZoneId;
import org.threeten.bp.Instant;
import org.threeten.bp.LocalDate;
import com.xero.api.StringUtil;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Code used to identify the Leave Category
 */
public enum LeaveCategoryCode {
  
    /**
     * ANNUALLEAVE
     */
  ANNUALLEAVE("ANNUALLEAVE"),
  
    /**
     * LONGSERVICELEAVE
     */
  LONGSERVICELEAVE("LONGSERVICELEAVE"),
  
    /**
     * PERSONALSICKCARERSLEAVE
     */
  PERSONALSICKCARERSLEAVE("PERSONALSICKCARERSLEAVE"),
  
    /**
     * ROSTEREDDAYOFF
     */
  ROSTEREDDAYOFF("ROSTEREDDAYOFF"),
  
    /**
     * TIMEOFFINLIEU
     */
  TIMEOFFINLIEU("TIMEOFFINLIEU"),
  
    /**
     * COMPASSIONATEANDBEREAVEMENTLEAVE
     */
  COMPASSIONATEANDBEREAVEMENTLEAVE("COMPASSIONATEANDBEREAVEMENTLEAVE"),
  
    /**
     * STUDYLEAVE
     */
  STUDYLEAVE("STUDYLEAVE"),
  
    /**
     * FAMILYANDDOMESTICVIOLENCELEAVE
     */
  FAMILYANDDOMESTICVIOLENCELEAVE("FAMILYANDDOMESTICVIOLENCELEAVE"),
  
    /**
     * SPECIALPAIDLEAVE
     */
  SPECIALPAIDLEAVE("SPECIALPAIDLEAVE"),
  
    /**
     * COMMUNITYSERVICELEAVE
     */
  COMMUNITYSERVICELEAVE("COMMUNITYSERVICELEAVE"),
  
    /**
     * JURYDUTYLEAVE
     */
  JURYDUTYLEAVE("JURYDUTYLEAVE"),
  
    /**
     * DEFENCERESERVELEAVE
     */
  DEFENCERESERVELEAVE("DEFENCERESERVELEAVE");

  private String value;

  LeaveCategoryCode(String value) {
    this.value = value;
  }

  /**
   * @return String value
   */
  @JsonValue
  public String getValue() {
    return value;
  }

  /** toString
  * @return String value
  */
  @Override
  public String toString() {
    return String.valueOf(value);
  }

   /** fromValue
   * @param value String 
   */
  @JsonCreator
  public static LeaveCategoryCode fromValue(String value) {
    for (LeaveCategoryCode b : LeaveCategoryCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

