/*
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.payrollau;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** See Account Types */
public enum AccountType {

  /** BANK */
  BANK("BANK"),

  /** CURRENT */
  CURRENT("CURRENT"),

  /** CURRLIAB */
  CURRLIAB("CURRLIAB"),

  /** DEPRECIATN */
  DEPRECIATN("DEPRECIATN"),

  /** DIRECTCOSTS */
  DIRECTCOSTS("DIRECTCOSTS"),

  /** EQUITY */
  EQUITY("EQUITY"),

  /** EXPENSE */
  EXPENSE("EXPENSE"),

  /** FIXED */
  FIXED("FIXED"),

  /** INVENTORY */
  INVENTORY("INVENTORY"),

  /** LIABILITY */
  LIABILITY("LIABILITY"),

  /** NONCURRENT */
  NONCURRENT("NONCURRENT"),

  /** OTHERINCOME */
  OTHERINCOME("OTHERINCOME"),

  /** OVERHEADS */
  OVERHEADS("OVERHEADS"),

  /** PREPAYMENT */
  PREPAYMENT("PREPAYMENT"),

  /** REVENUE */
  REVENUE("REVENUE"),

  /** SALES */
  SALES("SALES"),

  /** TERMLIAB */
  TERMLIAB("TERMLIAB"),

  /** PAYGLIABILITY */
  PAYGLIABILITY("PAYGLIABILITY"),

  /** PAYG */
  PAYG("PAYG"),

  /** SUPERANNUATIONEXPENSE */
  SUPERANNUATIONEXPENSE("SUPERANNUATIONEXPENSE"),

  /** SUPERANNUATIONLIABILITY */
  SUPERANNUATIONLIABILITY("SUPERANNUATIONLIABILITY"),

  /** WAGESEXPENSE */
  WAGESEXPENSE("WAGESEXPENSE"),

  /** WAGESPAYABLELIABILITY */
  WAGESPAYABLELIABILITY("WAGESPAYABLELIABILITY"),

  /** UNKNOWN_DEFAULT_OPEN_API */
  UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

  private String value;

  AccountType(String value) {
    this.value = value;
  }

  /** @return String value */
  @JsonValue
  public String getValue() {
    return value;
  }

  /**
   * toString
   *
   * @return String value
   */
  @Override
  public String toString() {
    return String.valueOf(value);
  }

  /**
   * fromValue
   *
   * @param value String
   */
  @JsonCreator
  public static AccountType fromValue(String value) {
    for (AccountType b : AccountType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}
