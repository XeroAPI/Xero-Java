/*
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.payrollau;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.xero.api.StringUtil;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** SettingsObject */
public class SettingsObject {
  StringUtil util = new StringUtil();

  @JsonProperty("Settings")
  private Settings settings;

  /**
   * settings
   *
   * @param settings Settings
   * @return SettingsObject
   */
  public SettingsObject settings(Settings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   *
   * @return settings
   */
  @ApiModelProperty(value = "")
  /**
   * settings
   *
   * @return settings Settings
   */
  public Settings getSettings() {
    return settings;
  }

  /**
   * settings
   *
   * @param settings Settings
   */
  public void setSettings(Settings settings) {
    this.settings = settings;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingsObject settingsObject = (SettingsObject) o;
    return Objects.equals(this.settings, settingsObject.settings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(settings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingsObject {\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
