/*
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.accounting;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.xero.api.StringUtil;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** Action */
public class Action {
  StringUtil util = new StringUtil();

  @JsonProperty("Name")
  private String name;
  /** Status of the action for this organisation */
  public enum StatusEnum {
    /** ALLOWED */
    ALLOWED("ALLOWED"),

    /** NOT_ALLOWED */
    NOT_ALLOWED("NOT-ALLOWED"),

    /** UNKNOWN_DEFAULT_OPEN_API */
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    /**
     * getValue
     *
     * @return String value
     */
    @JsonValue
    public String getValue() {
      return value;
    }

    /**
     * toString
     *
     * @return String value
     */
    @Override
    public String toString() {
      return String.valueOf(value);
    }

    /**
     * fromValue
     *
     * @param value String
     */
    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("Status")
  private StatusEnum status;
  /**
   * Name of the actions for this organisation
   *
   * @param name String
   * @return Action
   */
  public Action name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the actions for this organisation
   *
   * @return name
   */
  @ApiModelProperty(
      example = "UseMulticurrency",
      value = "Name of the actions for this organisation")
  /**
   * Name of the actions for this organisation
   *
   * @return name String
   */
  public String getName() {
    return name;
  }

  /**
   * Name of the actions for this organisation
   *
   * @param name String
   */
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Status of the action for this organisation
   *
   * @param status StatusEnum
   * @return Action
   */
  public Action status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Status of the action for this organisation
   *
   * @return status
   */
  @ApiModelProperty(value = "Status of the action for this organisation")
  /**
   * Status of the action for this organisation
   *
   * @return status StatusEnum
   */
  public StatusEnum getStatus() {
    return status;
  }

  /**
   * Status of the action for this organisation
   *
   * @param status StatusEnum
   */
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Action action = (Action) o;
    return Objects.equals(this.name, action.name) && Objects.equals(this.status, action.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Action {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
