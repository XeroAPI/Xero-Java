/*
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.accounting;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.xero.api.StringUtil;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/** ExternalLink */
public class ExternalLink {
  StringUtil util = new StringUtil();

  /** See External link types */
  public enum LinkTypeEnum {
    /** FACEBOOK */
    FACEBOOK("Facebook"),

    /** GOOGLEPLUS */
    GOOGLEPLUS("GooglePlus"),

    /** LINKEDIN */
    LINKEDIN("LinkedIn"),

    /** TWITTER */
    TWITTER("Twitter"),

    /** WEBSITE */
    WEBSITE("Website");

    private String value;

    LinkTypeEnum(String value) {
      this.value = value;
    }

    /**
     * getValue
     *
     * @return String value
     */
    @JsonValue
    public String getValue() {
      return value;
    }

    /**
     * toString
     *
     * @return String value
     */
    @Override
    public String toString() {
      return String.valueOf(value);
    }

    /**
     * fromValue
     *
     * @param value String
     */
    @JsonCreator
    public static LinkTypeEnum fromValue(String value) {
      for (LinkTypeEnum b : LinkTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("LinkType")
  private LinkTypeEnum linkType;

  @JsonProperty("Url")
  private String url;

  @JsonProperty("Description")
  private String description;

  /**
   * See External link types
   *
   * @param linkType LinkTypeEnum
   * @return ExternalLink
   */
  public ExternalLink linkType(LinkTypeEnum linkType) {
    this.linkType = linkType;
    return this;
  }

  /**
   * See External link types
   *
   * @return linkType
   */
  @ApiModelProperty(value = "See External link types")
  /**
   * See External link types
   *
   * @return linkType LinkTypeEnum
   */
  public LinkTypeEnum getLinkType() {
    return linkType;
  }

  /**
   * See External link types
   *
   * @param linkType LinkTypeEnum
   */
  public void setLinkType(LinkTypeEnum linkType) {
    this.linkType = linkType;
  }

  /**
   * URL for service e.g. http://twitter.com/xeroapi
   *
   * @param url String
   * @return ExternalLink
   */
  public ExternalLink url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL for service e.g. http://twitter.com/xeroapi
   *
   * @return url
   */
  @ApiModelProperty(value = "URL for service e.g. http://twitter.com/xeroapi")
  /**
   * URL for service e.g. http://twitter.com/xeroapi
   *
   * @return url String
   */
  public String getUrl() {
    return url;
  }

  /**
   * URL for service e.g. http://twitter.com/xeroapi
   *
   * @param url String
   */
  public void setUrl(String url) {
    this.url = url;
  }

  /**
   * description
   *
   * @param description String
   * @return ExternalLink
   */
  public ExternalLink description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   */
  @ApiModelProperty(value = "")
  /**
   * description
   *
   * @return description String
   */
  public String getDescription() {
    return description;
  }

  /**
   * description
   *
   * @param description String
   */
  public void setDescription(String description) {
    this.description = description;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalLink externalLink = (ExternalLink) o;
    return Objects.equals(this.linkType, externalLink.linkType)
        && Objects.equals(this.url, externalLink.url)
        && Objects.equals(this.description, externalLink.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkType, url, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalLink {\n");
    sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
