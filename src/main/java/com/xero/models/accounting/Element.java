/*
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.accounting;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.xero.models.accounting.ValidationError;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import java.io.IOException;

import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.LocalDateTime;
import org.threeten.bp.ZoneId;
import org.threeten.bp.Instant;
import org.threeten.bp.LocalDate;
import com.xero.api.StringUtil;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * Element
 */

public class Element {
  StringUtil util = new StringUtil();

  @JsonProperty("ValidationErrors")
  private List<ValidationError> validationErrors = new ArrayList<ValidationError>();

  @JsonProperty("BatchPaymentID")
  private UUID batchPaymentID;

  @JsonProperty("BankTransactionID")
  private UUID bankTransactionID;

  @JsonProperty("CreditNoteID")
  private UUID creditNoteID;

  @JsonProperty("ContactID")
  private UUID contactID;

  @JsonProperty("InvoiceID")
  private UUID invoiceID;

  @JsonProperty("ItemID")
  private UUID itemID;

  @JsonProperty("PurchaseOrderID")
  private UUID purchaseOrderID;
  /**
  * Array of Validation Error message
  * @param validationErrors  List&lt;ValidationError&gt;
  * @return Element
  **/
  public Element validationErrors(List<ValidationError> validationErrors) {
    this.validationErrors = validationErrors;
    return this;
  }

  /**
   * Array of Validation Error message
   * @param validationErrorsItem ValidationError 
   * @return Element
  **/
  public Element addValidationErrorsItem(ValidationError validationErrorsItem) {
    if (this.validationErrors == null) {
      this.validationErrors = new ArrayList<ValidationError>();
    }
    this.validationErrors.add(validationErrorsItem);
    return this;
  }

   /**
   * Array of Validation Error message
   * @return validationErrors
  **/
  @ApiModelProperty(value = "Array of Validation Error message")
  /** 
   * Array of Validation Error message
   * @return validationErrors List<ValidationError>
  **/
  public List<ValidationError> getValidationErrors() {
    return validationErrors;
  }

  /** 
  * Array of Validation Error message
  * @param validationErrors List&lt;ValidationError&gt; 
  **/

  public void setValidationErrors(List<ValidationError> validationErrors) {
    this.validationErrors = validationErrors;
  }

  /**
  * Unique ID for batch payment object with validation error
  * @param batchPaymentID  UUID
  * @return Element
  **/
  public Element batchPaymentID(UUID batchPaymentID) {
    this.batchPaymentID = batchPaymentID;
    return this;
  }

   /**
   * Unique ID for batch payment object with validation error
   * @return batchPaymentID
  **/
  @ApiModelProperty(value = "Unique ID for batch payment object with validation error")
  /** 
   * Unique ID for batch payment object with validation error
   * @return batchPaymentID UUID
  **/
  public UUID getBatchPaymentID() {
    return batchPaymentID;
  }

  /** 
  * Unique ID for batch payment object with validation error
  * @param batchPaymentID  UUID
  **/

  public void setBatchPaymentID(UUID batchPaymentID) {
    this.batchPaymentID = batchPaymentID;
  }

  /**
  * bankTransactionID
  * @param bankTransactionID  UUID
  * @return Element
  **/
  public Element bankTransactionID(UUID bankTransactionID) {
    this.bankTransactionID = bankTransactionID;
    return this;
  }

   /**
   * Get bankTransactionID
   * @return bankTransactionID
  **/
  @ApiModelProperty(value = "")
  /** 
   * bankTransactionID
   * @return bankTransactionID UUID
  **/
  public UUID getBankTransactionID() {
    return bankTransactionID;
  }

  /** 
  * bankTransactionID
  * @param bankTransactionID  UUID
  **/

  public void setBankTransactionID(UUID bankTransactionID) {
    this.bankTransactionID = bankTransactionID;
  }

  /**
  * creditNoteID
  * @param creditNoteID  UUID
  * @return Element
  **/
  public Element creditNoteID(UUID creditNoteID) {
    this.creditNoteID = creditNoteID;
    return this;
  }

   /**
   * Get creditNoteID
   * @return creditNoteID
  **/
  @ApiModelProperty(value = "")
  /** 
   * creditNoteID
   * @return creditNoteID UUID
  **/
  public UUID getCreditNoteID() {
    return creditNoteID;
  }

  /** 
  * creditNoteID
  * @param creditNoteID  UUID
  **/

  public void setCreditNoteID(UUID creditNoteID) {
    this.creditNoteID = creditNoteID;
  }

  /**
  * contactID
  * @param contactID  UUID
  * @return Element
  **/
  public Element contactID(UUID contactID) {
    this.contactID = contactID;
    return this;
  }

   /**
   * Get contactID
   * @return contactID
  **/
  @ApiModelProperty(value = "")
  /** 
   * contactID
   * @return contactID UUID
  **/
  public UUID getContactID() {
    return contactID;
  }

  /** 
  * contactID
  * @param contactID  UUID
  **/

  public void setContactID(UUID contactID) {
    this.contactID = contactID;
  }

  /**
  * invoiceID
  * @param invoiceID  UUID
  * @return Element
  **/
  public Element invoiceID(UUID invoiceID) {
    this.invoiceID = invoiceID;
    return this;
  }

   /**
   * Get invoiceID
   * @return invoiceID
  **/
  @ApiModelProperty(value = "")
  /** 
   * invoiceID
   * @return invoiceID UUID
  **/
  public UUID getInvoiceID() {
    return invoiceID;
  }

  /** 
  * invoiceID
  * @param invoiceID  UUID
  **/

  public void setInvoiceID(UUID invoiceID) {
    this.invoiceID = invoiceID;
  }

  /**
  * itemID
  * @param itemID  UUID
  * @return Element
  **/
  public Element itemID(UUID itemID) {
    this.itemID = itemID;
    return this;
  }

   /**
   * Get itemID
   * @return itemID
  **/
  @ApiModelProperty(value = "")
  /** 
   * itemID
   * @return itemID UUID
  **/
  public UUID getItemID() {
    return itemID;
  }

  /** 
  * itemID
  * @param itemID  UUID
  **/

  public void setItemID(UUID itemID) {
    this.itemID = itemID;
  }

  /**
  * purchaseOrderID
  * @param purchaseOrderID  UUID
  * @return Element
  **/
  public Element purchaseOrderID(UUID purchaseOrderID) {
    this.purchaseOrderID = purchaseOrderID;
    return this;
  }

   /**
   * Get purchaseOrderID
   * @return purchaseOrderID
  **/
  @ApiModelProperty(value = "")
  /** 
   * purchaseOrderID
   * @return purchaseOrderID UUID
  **/
  public UUID getPurchaseOrderID() {
    return purchaseOrderID;
  }

  /** 
  * purchaseOrderID
  * @param purchaseOrderID  UUID
  **/

  public void setPurchaseOrderID(UUID purchaseOrderID) {
    this.purchaseOrderID = purchaseOrderID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Element element = (Element) o;
    return Objects.equals(this.validationErrors, element.validationErrors) &&
        Objects.equals(this.batchPaymentID, element.batchPaymentID) &&
        Objects.equals(this.bankTransactionID, element.bankTransactionID) &&
        Objects.equals(this.creditNoteID, element.creditNoteID) &&
        Objects.equals(this.contactID, element.contactID) &&
        Objects.equals(this.invoiceID, element.invoiceID) &&
        Objects.equals(this.itemID, element.itemID) &&
        Objects.equals(this.purchaseOrderID, element.purchaseOrderID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validationErrors, batchPaymentID, bankTransactionID, creditNoteID, contactID, invoiceID, itemID, purchaseOrderID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Element {\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("    batchPaymentID: ").append(toIndentedString(batchPaymentID)).append("\n");
    sb.append("    bankTransactionID: ").append(toIndentedString(bankTransactionID)).append("\n");
    sb.append("    creditNoteID: ").append(toIndentedString(creditNoteID)).append("\n");
    sb.append("    contactID: ").append(toIndentedString(contactID)).append("\n");
    sb.append("    invoiceID: ").append(toIndentedString(invoiceID)).append("\n");
    sb.append("    itemID: ").append(toIndentedString(itemID)).append("\n");
    sb.append("    purchaseOrderID: ").append(toIndentedString(purchaseOrderID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

