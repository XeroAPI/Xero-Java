/*
 * Xero Payroll UK
 * This is the Xero Payroll API for orgs in the UK region.
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.payrolluk;
import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import java.io.IOException;

import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.LocalDateTime;
import org.threeten.bp.ZoneId;
import org.threeten.bp.Instant;
import org.threeten.bp.LocalDate;
import com.xero.api.StringUtil;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Statutory Deduction Category
 */
public enum StatutoryDeductionCategory {
  
    /**
     * ADDITIONALSTUDENTLOAN
     */
  ADDITIONALSTUDENTLOAN("AdditionalStudentLoan"),
  
    /**
     * CHILDSUPPORT
     */
  CHILDSUPPORT("ChildSupport"),
  
    /**
     * COURTFINES
     */
  COURTFINES("CourtFines"),
  
    /**
     * CREDITOR
     */
  CREDITOR("Creditor"),
  
    /**
     * FEDERALLEVY
     */
  FEDERALLEVY("FederalLevy"),
  
    /**
     * INLANDREVENUEARREARS
     */
  INLANDREVENUEARREARS("InlandRevenueArrears"),
  
    /**
     * KIWISAVER
     */
  KIWISAVER("KiwiSaver"),
  
    /**
     * MSDREPAYMENTS
     */
  MSDREPAYMENTS("MsdRepayments"),
  
    /**
     * NONPRIORITYORDER
     */
  NONPRIORITYORDER("NonPriorityOrder"),
  
    /**
     * PRIORITYORDER
     */
  PRIORITYORDER("PriorityOrder"),
  
    /**
     * TABLEBASED
     */
  TABLEBASED("TableBased"),
  
    /**
     * STUDENTLOAN
     */
  STUDENTLOAN("StudentLoan"),
  
    /**
     * VOLUNTARYSTUDENTLOAN
     */
  VOLUNTARYSTUDENTLOAN("VoluntaryStudentLoan"),
  
    /**
     * USCHILDSUPPORT
     */
  USCHILDSUPPORT("USChildSupport");

  private String value;

  StatutoryDeductionCategory(String value) {
    this.value = value;
  }

  /**
   * @return String value
   */
  @JsonValue
  public String getValue() {
    return value;
  }

  /** toString
  * @return String value
  */
  @Override
  public String toString() {
    return String.valueOf(value);
  }

   /** fromValue
   * @param value String 
   */
  @JsonCreator
  public static StatutoryDeductionCategory fromValue(String value) {
    for (StatutoryDeductionCategory b : StatutoryDeductionCategory.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

